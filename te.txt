import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

export default function OcapViewer({ defaultOpen = true }) {
  const [expanded, setExpanded] = useState(defaultOpen);
  const [isFullscreen, setIsFullscreen] = useState(false);

  const width = 1200; 
  const height = 700;

  return (
    <>
      <AnimatePresence>
        {isFullscreen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 flex justify-center items-center bg-black/60"
          >
            <motion.div
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              transition={{ duration: 0.3 }}
              className="bg-brand-gray/90 rounded-2xl shadow-lg overflow-hidden border border-brand-muted flex flex-col w-full h-full"
            >
              <div className="flex justify-between items-center p-4 bg-brand-gray/90">
                <h3 className="font-heading text-lg text-brand-light">OCAP Viewer</h3>
                <button
                  onClick={() => setIsFullscreen(false)}
                  className="px-2 py-1 bg-brand-red text-white rounded hover:bg-red-700 text-xs"
                >
                  ✕ Закрыть
                </button>
              </div>
              <iframe
                src="https://ocap.red-bear.ru/"
                title="OCAP Viewer"
                className="w-full flex-1 border-0"
              />
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      <div className="flex justify-center my-4">
        <div
          className="bg-brand-gray/90 rounded-2xl shadow-lg overflow-hidden border border-brand-muted flex flex-col"
          style={{ width }}
        >
          <div
            className="flex justify-between items-center p-4 cursor-pointer hover:bg-brand-gray/80"
            onClick={() => setExpanded(!expanded)}
          >
            <h3 className="font-heading text-lg text-brand-light">OCAP Viewer</h3>
            <button
              onClick={(e) => {
                e.stopPropagation();
                setIsFullscreen(true);
              }}
              className="px-2 py-1 bg-brand-gray text-brand-light rounded hover:bg-brand-gray/70 text-xs"
            >
              ⛶ Во весь экран
            </button>
          </div>

          <AnimatePresence>
            {expanded && (
              <motion.div
                initial={{ height: 0, opacity: 0 }}
                animate={{ height, opacity: 1 }}
                exit={{ height: 0, opacity: 0 }}
                transition={{ duration: 0.3 }}
                className="overflow-hidden flex flex-col"
                style={{ width }}
              >
                <iframe
                  src="https://ocap.red-bear.ru/"
                  title="OCAP Viewer"
                  className="w-full flex-1 border-0"
                />
              </motion.div>
            )}
          </AnimatePresence>
        </div>
      </div>
    </>
  );
}

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

export default function SquadDetail({ squad, onVictimClick }) {
  const [showVictims, setShowVictims] = useState(false);
  const [sortColumn, setSortColumn] = useState("frags");
  const [sortOrder, setSortOrder] = useState("desc");

  const handleSort = (column) => {
    if (sortColumn === column) {
      setSortOrder(sortOrder === "asc" ? "desc" : "asc");
    } else {
      setSortColumn(column);
      setSortOrder("desc");
    }
  };

  const formatName = (tag, name) => {
    const formattedTag = `[${tag.toUpperCase()}]`;
    const formattedName = name
      .split(" ")
      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
      .join(" ");
    return `${formattedTag} ${formattedName}`;
  };

  const sortedPlayers = [...squad.squad_players].sort((a, b) => {
    const valA = a[sortColumn];
    const valB = b[sortColumn];
    if (valA === valB) return 0;
    return sortOrder === "asc" ? valA - valB : valB - valA;
  });

  return (
    <div className="space-y-4">
      {/* Игроки */}
      <div>
        <h4 className="font-heading text-brand-light mb-2 text-sm">Игроки</h4>
        <table className="w-full text-xs text-brand-light border-collapse">
          <thead>
            <tr className="text-left text-brand-muted border-b border-brand-gray">
              <th className="px-2 py-1">Имя</th>
              <th
                className="px-2 py-1 cursor-pointer hover:underline"
                onClick={() => handleSort("frags")}
              >
                Frags {sortColumn === "frags" ? (sortOrder === "asc" ? "▲" : "▼") : ""}
              </th>
              <th
                className="px-2 py-1 cursor-pointer hover:underline"
                onClick={() => handleSort("tk")}
              >
                TK {sortColumn === "tk" ? (sortOrder === "asc" ? "▲" : "▼") : ""}
              </th>
            </tr>
          </thead>
          <tbody>
            {sortedPlayers.map((p, idx) => (
              <tr key={`player-${idx}`}>
                <td className="px-2 py-1 text-sm md:text-base font-semibold">
                  {formatName(squad.squad_tag, p.name)}
                </td>
                <td className="px-2 py-1">{p.frags}</td>
                <td className="px-2 py-1">{p.tk}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Кнопка показать жертв */}
      <button
        className="text-xs text-brand-red font-heading hover:underline"
        onClick={() => setShowVictims(!showVictims)}
      >
        {showVictims ? "Скрыть жертв" : "Показать жертв"}
      </button>

      {/* Жертвы */}
      <AnimatePresence>
        {showVictims && (
          <motion.div
            initial={{ height: 0, opacity: 0 }}
            animate={{ height: "auto", opacity: 1 }}
            exit={{ height: 0, opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            <div className="space-y-2 mt-2">
              <h4 className="font-heading text-brand-light mb-2 text-sm">Жертвы</h4>
              <table className="w-full text-xs text-brand-light border-collapse">
                <thead>
                  <tr className="text-left text-brand-muted border-b border-brand-gray">
                    <th className="px-2 py-1">Время</th>
                    <th className="px-2 py-1">Игрок</th>
                    <th className="px-2 py-1">Оружие</th>
                    <th className="px-2 py-1">Дистанция</th>
                    <th className="px-2 py-1">Убийца</th>
                    <th className="px-2 py-1">Тип</th>
                  </tr>
                </thead>
                <tbody>
                  {squad.victims_players.map((v, idx) => (
                    <tr
                      key={`victim-${idx}`}
                      className="cursor-pointer hover:bg-brand-gray/70"
                      onClick={() => {
                        if (onVictimClick) {
                          onVictimClick(v);
                        }
                      }}
                    >
                      <td className="px-2 py-1">{v.time}</td>
                      <td className="px-2 py-1 text-sm md:text-base font-semibold">
                        {formatName(squad.squad_tag, v.name)}
                      </td>
                      <td className="px-2 py-1">
                        {v.weapon
                          .split(" ")
                          .map(
                            (word) =>
                              word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()
                          )
                          .join(" ")}
                      </td>
                      <td className="px-2 py-1">{v.distance}м</td>
                      <td className="px-2 py-1 text-sm md:text-base font-semibold">
                        {formatName(squad.squad_tag, v.killer_name)}
                      </td>
                      <td className="px-2 py-1">
                        {v.kill_type.charAt(0).toUpperCase() + v.kill_type.slice(1).toLowerCase()}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}



теперь смотри что - я хочу что бы в ocapviewr при нажатие на убийство в сквад детейл окап вьвер открывал ссылку - http://ocap.red-bear.ru/?file=&frame=0&zoom=1.9000000000000001&x=-128.076928773087&y=128.07692877308702 